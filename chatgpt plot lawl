import matplotlib.pyplot as plt
import numpy as np

y = [] //this should be outside of the iteration loop but that's a problem for future us

particle_positions = np.array([[[6, 3, 1], [6, 3, 2], [6, 3, 3]], //this is just example data taken from the tests.py file
                                [[5, 2, 1], [9, 6.2, 1.9], [5, 2, 3]],
                                [[9, 6, 1.5], [9, 6, 2], [9, 6, 2.5]],
                                [[0, 6, 1], [0, 6, 2], [0, 6, 3]]])

//Flatten and filter out elements with z < 2
filtered_positions = [
    particle.tolist()
    for row in particle_positions
    for particle in row
    if particle[2] >= 2
]

particles_within_2 = len(filtered_positions)
density = len(filtered_positions)/200
y.append(density)

//Data for number of steps (x) and equilibrium densities (y)
x = [i for i in range(1000, 10**5 + 1, 1000)] //since this is here, we only need to update the y axis with new data
y = y //placeholder so that we know this exists

//Plotting the data
plt.figure(figsize=(8, 6))
plt.plot(x, y, marker='o', linestyle='-', color='b', label='Equilibrium Density')

//Adding labels and title
plt.xlabel('Number of Steps', fontsize=12)
plt.ylabel('Equilibrium Density of Particles', fontsize=12)
plt.title('Equilibrium Density vs. Number of Steps', fontsize=14)
plt.grid(True)

//Display legend
plt.legend()

//Show the plot
plt.show()
